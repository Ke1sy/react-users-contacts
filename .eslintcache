[{"C:\\OSPanel\\domains\\users-list\\src\\index.tsx":"1","C:\\OSPanel\\domains\\users-list\\src\\reportWebVitals.ts":"2","C:\\OSPanel\\domains\\users-list\\src\\App.tsx":"3","C:\\OSPanel\\domains\\users-list\\src\\components\\Layout\\index.ts":"4","C:\\OSPanel\\domains\\users-list\\src\\components\\Layout\\Main.tsx":"5","C:\\OSPanel\\domains\\users-list\\src\\components\\Layout\\Header.tsx":"6","C:\\OSPanel\\domains\\users-list\\src\\RouterManager.ts":"7","C:\\OSPanel\\domains\\users-list\\src\\components\\About\\About.tsx":"8","C:\\OSPanel\\domains\\users-list\\src\\components\\Clients\\Clients.tsx":"9","C:\\OSPanel\\domains\\users-list\\src\\components\\Services\\Services.tsx":"10","C:\\OSPanel\\domains\\users-list\\src\\components\\Contacts\\Contacts.tsx":"11","C:\\OSPanel\\domains\\users-list\\src\\components\\Users\\UsersContainer.tsx":"12","C:\\OSPanel\\domains\\users-list\\src\\components\\NotFound\\NotFound.tsx":"13","C:\\OSPanel\\domains\\users-list\\src\\components\\NotFound\\notFoundStyles.ts":"14","C:\\OSPanel\\domains\\users-list\\src\\components\\Preloader\\Preloader.tsx":"15","C:\\OSPanel\\domains\\users-list\\src\\components\\Preloader\\preloaderStyles.ts":"16","C:\\OSPanel\\domains\\users-list\\src\\theme.js":"17","C:\\OSPanel\\domains\\users-list\\src\\components\\Navigation\\Navigation.tsx":"18","C:\\OSPanel\\domains\\users-list\\src\\components\\PageTitle\\PageTitle.tsx":"19","C:\\OSPanel\\domains\\users-list\\src\\redux\\store.ts":"20","C:\\OSPanel\\domains\\users-list\\src\\redux\\reducers\\users-reducer.ts":"21","C:\\OSPanel\\domains\\users-list\\src\\api\\api.ts":"22","C:\\OSPanel\\domains\\users-list\\src\\redux\\reducers\\user-selectors.ts":"23","C:\\OSPanel\\domains\\users-list\\src\\components\\Dialogs\\DeleteDialog.tsx":"24","C:\\OSPanel\\domains\\users-list\\src\\components\\Dialogs\\EditDialog.tsx":"25","C:\\OSPanel\\domains\\users-list\\src\\components\\Dialogs\\styles.ts":"26","C:\\OSPanel\\domains\\users-list\\src\\components\\Users\\Users\\Users.tsx":"27","C:\\OSPanel\\domains\\users-list\\src\\components\\Users\\Users\\UsersTable.tsx":"28","C:\\OSPanel\\domains\\users-list\\src\\components\\Users\\Users\\UsersTopPanel.tsx":"29","C:\\OSPanel\\domains\\users-list\\src\\components\\Search\\Search.tsx":"30","C:\\OSPanel\\domains\\users-list\\src\\components\\Navigation\\MobileNavigation.tsx":"31","C:\\OSPanel\\domains\\users-list\\src\\components\\Suspense\\Suspense.tsx":"32","C:\\OSPanel\\domains\\user-contacts-test\\src\\index.tsx":"33","C:\\OSPanel\\domains\\user-contacts-test\\src\\theme.js":"34","C:\\OSPanel\\domains\\user-contacts-test\\src\\reportWebVitals.ts":"35","C:\\OSPanel\\domains\\user-contacts-test\\src\\redux\\store.ts":"36","C:\\OSPanel\\domains\\user-contacts-test\\src\\App.tsx":"37","C:\\OSPanel\\domains\\user-contacts-test\\src\\redux\\reducers\\users-reducer.ts":"38","C:\\OSPanel\\domains\\user-contacts-test\\src\\RouterManager.ts":"39","C:\\OSPanel\\domains\\user-contacts-test\\src\\components\\Suspense\\Suspense.tsx":"40","C:\\OSPanel\\domains\\user-contacts-test\\src\\components\\Layout\\index.ts":"41","C:\\OSPanel\\domains\\user-contacts-test\\src\\components\\NotFound\\NotFound.tsx":"42","C:\\OSPanel\\domains\\user-contacts-test\\src\\components\\Layout\\Main.tsx":"43","C:\\OSPanel\\domains\\user-contacts-test\\src\\components\\NotFound\\notFoundStyles.ts":"44","C:\\OSPanel\\domains\\user-contacts-test\\src\\components\\Layout\\Header.tsx":"45","C:\\OSPanel\\domains\\user-contacts-test\\src\\components\\PageTitle\\PageTitle.tsx":"46","C:\\OSPanel\\domains\\user-contacts-test\\src\\api\\api.ts":"47","C:\\OSPanel\\domains\\user-contacts-test\\src\\components\\Preloader\\Preloader.tsx":"48","C:\\OSPanel\\domains\\user-contacts-test\\src\\components\\Users\\UsersContainer.tsx":"49","C:\\OSPanel\\domains\\user-contacts-test\\src\\components\\Navigation\\MobileNavigation.tsx":"50","C:\\OSPanel\\domains\\user-contacts-test\\src\\components\\Navigation\\Navigation.tsx":"51","C:\\OSPanel\\domains\\user-contacts-test\\src\\components\\Preloader\\preloaderStyles.ts":"52","C:\\OSPanel\\domains\\user-contacts-test\\src\\redux\\reducers\\user-selectors.ts":"53","C:\\OSPanel\\domains\\user-contacts-test\\src\\components\\Dialogs\\DeleteDialog.tsx":"54","C:\\OSPanel\\domains\\user-contacts-test\\src\\components\\Dialogs\\EditDialog.tsx":"55","C:\\OSPanel\\domains\\user-contacts-test\\src\\components\\Users\\Users\\Users.tsx":"56","C:\\OSPanel\\domains\\user-contacts-test\\src\\components\\Dialogs\\styles.ts":"57","C:\\OSPanel\\domains\\user-contacts-test\\src\\components\\Users\\Users\\UsersTopPanel.tsx":"58","C:\\OSPanel\\domains\\user-contacts-test\\src\\components\\Users\\Users\\UsersTable.tsx":"59","C:\\OSPanel\\domains\\user-contacts-test\\src\\components\\Search\\Search.tsx":"60","C:\\OSPanel\\domains\\user-contacts-test\\src\\components\\Notifications\\Notifications.tsx":"61","C:\\OSPanel\\domains\\user-contacts-test\\src\\components\\Dashboard\\Dashboard.tsx":"62","C:\\OSPanel\\domains\\user-contacts-test\\src\\types\\users.ts":"63","C:\\OSPanel\\domains\\user-contacts-test\\src\\components\\Layout\\Footer.tsx":"64","C:\\OSPanel\\domains\\user-contacts-test\\src\\components\\Layout\\headerStyles.ts":"65","C:\\OSPanel\\domains\\user-contacts-test\\src\\components\\Users\\Users\\usersTableStyles.ts":"66"},{"size":693,"mtime":1610901777471,"results":"67","hashOfConfig":"68"},{"size":425,"mtime":499162500000,"results":"69","hashOfConfig":"68"},{"size":1055,"mtime":1610897878596,"results":"70","hashOfConfig":"68"},{"size":85,"mtime":1610650962017,"results":"71","hashOfConfig":"68"},{"size":614,"mtime":1610801453594,"results":"72","hashOfConfig":"68"},{"size":1371,"mtime":1610901791619,"results":"73","hashOfConfig":"68"},{"size":1684,"mtime":1610901900686,"results":"74","hashOfConfig":"68"},{"size":259,"mtime":1610801486294,"results":"75","hashOfConfig":"68"},{"size":268,"mtime":1610801532043,"results":"76","hashOfConfig":"68"},{"size":263,"mtime":1610801591991,"results":"77","hashOfConfig":"68"},{"size":263,"mtime":1610801549258,"results":"78","hashOfConfig":"68"},{"size":4943,"mtime":1610901777494,"results":"79","hashOfConfig":"68"},{"size":400,"mtime":1587042144981,"results":"80","hashOfConfig":"68"},{"size":358,"mtime":1587042144981,"results":"81","hashOfConfig":"68"},{"size":593,"mtime":1587042144981,"results":"82","hashOfConfig":"68"},{"size":459,"mtime":1587042144981,"results":"83","hashOfConfig":"68"},{"size":1375,"mtime":1610818080400,"results":"84","hashOfConfig":"68"},{"size":1474,"mtime":1610901791597,"results":"85","hashOfConfig":"68"},{"size":930,"mtime":1610901883492,"results":"86","hashOfConfig":"68"},{"size":637,"mtime":1610805317898,"results":"87","hashOfConfig":"68"},{"size":3043,"mtime":1610822386929,"results":"88","hashOfConfig":"68"},{"size":303,"mtime":1610810053477,"results":"89","hashOfConfig":"68"},{"size":244,"mtime":1610806930453,"results":"90","hashOfConfig":"68"},{"size":1860,"mtime":1610820735986,"results":"91","hashOfConfig":"68"},{"size":5671,"mtime":1610823868939,"results":"92","hashOfConfig":"68"},{"size":571,"mtime":1610818650390,"results":"93","hashOfConfig":"68"},{"size":1381,"mtime":1610901821571,"results":"94","hashOfConfig":"68"},{"size":5525,"mtime":1618038372723,"results":"95","hashOfConfig":"68"},{"size":1474,"mtime":1610901777448,"results":"96","hashOfConfig":"68"},{"size":2600,"mtime":1610901798028,"results":"97","hashOfConfig":"68"},{"size":2297,"mtime":1610901644250,"results":"98","hashOfConfig":"68"},{"size":370,"mtime":1610901883519,"results":"99","hashOfConfig":"68"},{"size":729,"mtime":1618055722340,"results":"100","hashOfConfig":"101"},{"size":1066,"mtime":1618161275348,"results":"102","hashOfConfig":"101"},{"size":425,"mtime":499162500000,"results":"103","hashOfConfig":"101"},{"size":637,"mtime":1610805317898,"results":"104","hashOfConfig":"101"},{"size":1546,"mtime":1618087961921,"results":"105","hashOfConfig":"101"},{"size":3059,"mtime":1618047672351,"results":"106","hashOfConfig":"101"},{"size":1324,"mtime":1618048013038,"results":"107","hashOfConfig":"101"},{"size":370,"mtime":1610901883519,"results":"108","hashOfConfig":"101"},{"size":85,"mtime":1610650962017,"results":"109","hashOfConfig":"101"},{"size":478,"mtime":1618059009444,"results":"110","hashOfConfig":"101"},{"size":566,"mtime":1618087823522,"results":"111","hashOfConfig":"101"},{"size":358,"mtime":1587042144981,"results":"112","hashOfConfig":"101"},{"size":4331,"mtime":1618161195884,"results":"113","hashOfConfig":"101"},{"size":601,"mtime":1618059339894,"results":"114","hashOfConfig":"101"},{"size":159,"mtime":1618144767811,"results":"115","hashOfConfig":"101"},{"size":593,"mtime":1587042144981,"results":"116","hashOfConfig":"101"},{"size":6467,"mtime":1618156757504,"results":"117","hashOfConfig":"101"},{"size":2290,"mtime":1618146266076,"results":"118","hashOfConfig":"101"},{"size":1869,"mtime":1618088320623,"results":"119","hashOfConfig":"101"},{"size":459,"mtime":1587042144981,"results":"120","hashOfConfig":"101"},{"size":244,"mtime":1610806930453,"results":"121","hashOfConfig":"101"},{"size":1860,"mtime":1618047341603,"results":"122","hashOfConfig":"101"},{"size":6753,"mtime":1618153622433,"results":"123","hashOfConfig":"101"},{"size":2083,"mtime":1618156215884,"results":"124","hashOfConfig":"101"},{"size":571,"mtime":1610818650390,"results":"125","hashOfConfig":"101"},{"size":7832,"mtime":1618153143993,"results":"126","hashOfConfig":"101"},{"size":8648,"mtime":1618156788979,"results":"127","hashOfConfig":"101"},{"size":2909,"mtime":1618152518428,"results":"128","hashOfConfig":"101"},{"size":318,"mtime":1618058996827,"results":"129","hashOfConfig":"101"},{"size":300,"mtime":1618059048839,"results":"130","hashOfConfig":"101"},{"size":656,"mtime":1618051755268,"results":"131","hashOfConfig":"101"},{"size":7293,"mtime":1618088999871,"results":"132","hashOfConfig":"101"},{"size":4113,"mtime":1618161186620,"results":"133","hashOfConfig":"101"},{"size":3772,"mtime":1618149291695,"results":"134","hashOfConfig":"101"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},"morg5l",{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"137"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"137"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"137"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},"ouuppm",{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"206"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"206"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"206"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"206"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"206"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\OSPanel\\domains\\users-list\\src\\index.tsx",[],["278","279"],"C:\\OSPanel\\domains\\users-list\\src\\reportWebVitals.ts",[],"C:\\OSPanel\\domains\\users-list\\src\\App.tsx",[],"C:\\OSPanel\\domains\\users-list\\src\\components\\Layout\\index.ts",[],"C:\\OSPanel\\domains\\users-list\\src\\components\\Layout\\Main.tsx",[],"C:\\OSPanel\\domains\\users-list\\src\\components\\Layout\\Header.tsx",["280"],"import React from 'react';\nimport {AppBar, Container, Hidden} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Navigation from \"../Navigation/Navigation\";\nimport RM from \"../../RouterManager\";\nimport MobileNavigation from \"../Navigation/MobileNavigation\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        backgroundColor: theme.palette.background.default,\n        boxShadow: 'none'\n    },\n    title: {\n        flexGrow: 1,\n    },\n}));\n\n\nexport type NavLinkType = {\n    title: string,\n    path: string\n}\n\nconst NAV_LINKS: NavLinkType[] = [\n    {\n        title: 'Services',\n        path: RM.services.path\n    }, {\n        title: 'Clients',\n        path: RM.clients.path\n    }, {\n        title: 'About us',\n        path: RM.about.path\n    }, {\n        title: 'Members',\n        path: RM.users.path\n    }, {\n        title: 'Contacts',\n        path: RM.contacts.path\n    }\n];\n\nexport default () => {\n    const classes = useStyles();\n    return (\n        <AppBar position=\"static\" className={classes.root}>\n            <Container maxWidth=\"lg\">\n                <Hidden xsDown>\n                    <Navigation navLinks={NAV_LINKS}/>\n                </Hidden>\n                <Hidden smUp>\n                    <MobileNavigation navLinks={NAV_LINKS}/>\n                </Hidden>\n            </Container>\n        </AppBar>\n    )\n}\n\n","C:\\OSPanel\\domains\\users-list\\src\\RouterManager.ts",[],"C:\\OSPanel\\domains\\users-list\\src\\components\\About\\About.tsx",[],"C:\\OSPanel\\domains\\users-list\\src\\components\\Clients\\Clients.tsx",[],"C:\\OSPanel\\domains\\users-list\\src\\components\\Services\\Services.tsx",[],"C:\\OSPanel\\domains\\users-list\\src\\components\\Contacts\\Contacts.tsx",[],"C:\\OSPanel\\domains\\users-list\\src\\components\\Users\\UsersContainer.tsx",["281","282","283","284"],"import React, {FC, useEffect, useState} from \"react\";\r\nimport Users from \"./Users/Users\";\r\nimport {connect} from 'react-redux'\r\nimport {AppStateType} from \"../../redux/store\";\r\nimport {fakeAddUser, fakeDeleteUser, fakeEditUser, loadUsers} from \"../../redux/reducers/users-reducer\";\r\nimport {UserType} from \"../../types/types\";\r\nimport {getUsers, getUsersAreLoading} from \"../../redux/reducers/user-selectors\";\r\nimport EditDialog from \"../Dialogs/EditDialog\";\r\nimport DeleteDialog from \"../Dialogs/DeleteDialog\";\r\nimport {v4 as uuidv4} from 'uuid';\r\nimport {MenuItem, Select} from \"@material-ui/core\";\r\n\r\ntype MapStatePropsType = {\r\n    usersAreLoading: boolean\r\n    users: UserType[]\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    loadUsers: () => void\r\n    fakeDeleteUser: (id: string | number) => void\r\n    fakeAddUser: (user: UserType) => void\r\n    fakeEditUser: (user: UserType) => void\r\n}\r\n\r\ntype PropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\ntype FormDataType = {\r\n    id: null | number | string,\r\n    name: string,\r\n    email: string,\r\n    phone: string,\r\n    website: string,\r\n}\r\n\r\nconst UsersContainer: FC<PropsType> = ({users, usersAreLoading, loadUsers, fakeAddUser, fakeDeleteUser, fakeEditUser}) => {\r\n    const [searchText, setSearchText] = useState('');\r\n    const [editDialogIsOpen, setEditDialogIsOpen] = useState(false);\r\n    const [deleteDialogIsOpen, setDeleteDialogIsOpen] = useState(false);\r\n    const [selectedUser, setSelectedUser] = useState<null | UserType>(null);\r\n    const [filteredUsers, setFilteredUsers] = useState<UserType[]>(users);\r\n    const [sortKey, setSortKey] = useState<'name' | 'phone'>('name');\r\n\r\n    useEffect(() => {\r\n        loadUsers()\r\n    }, []);\r\n\r\n     useEffect(() => {\r\n         filterUsers()\r\n    }, [users, searchText, sortKey]);\r\n\r\n    const filterUsers = () => {\r\n        const searchTextVal = searchText.trim().toLowerCase();\r\n\r\n        //search matches\r\n        const matches = users.filter(({name, website, email, phone}) => {\r\n            return name.trim().toLowerCase().includes(searchTextVal) ||\r\n                email.trim().toLowerCase().includes(searchTextVal) ||\r\n                phone.trim().toLowerCase().includes(searchTextVal) ||\r\n                website.trim().toLowerCase().includes(searchTextVal);\r\n        });\r\n\r\n        //order by sortKey\r\n        setFilteredUsers(matches.sort((a,b) => (a[sortKey] > b[sortKey]) ? 1 : ((b[sortKey] > a[sortKey]) ? -1 : 0)))\r\n    };\r\n\r\n\r\n    const onDeleteUser = (id: string | number) => {\r\n        console.log('delete user');\r\n        fakeDeleteUser(id);\r\n        setDeleteDialogIsOpen(false)\r\n    };\r\n\r\n    const addUser = (user: FormDataType) => {\r\n        console.log('add user');\r\n        fakeAddUser({...user, id: uuidv4()})\r\n    };\r\n\r\n    const editUser = (user: FormDataType) => {\r\n        console.log('edit user');\r\n        fakeEditUser({...user, id: user.id || uuidv4()})\r\n    };\r\n\r\n    const createUpdateUser = (formData: FormDataType, type: 'add' | 'edit') => {\r\n        switch (type) {\r\n            case 'add':\r\n                addUser(formData);\r\n                break;\r\n            case 'edit':\r\n                editUser(formData);\r\n                break;\r\n            default:\r\n                return false\r\n        }\r\n    };\r\n\r\n    const openCreateUpdateDialog = (value: boolean, user: UserType | null) => {\r\n        setSelectedUser(user);\r\n        setEditDialogIsOpen(value);\r\n    };\r\n\r\n    const openDeleteDialog = (value: boolean, user: UserType | null) => {\r\n        setSelectedUser(user);\r\n        setDeleteDialogIsOpen(value);\r\n    };\r\n\r\n\r\n    const onChangeSearchText = (searchText: string ) => {\r\n        setSearchText(searchText)\r\n    };\r\n\r\n    const handleSortKeyChange = (event: any) => {\r\n        setSortKey(event.target.value);\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <Users\r\n                users={filteredUsers}\r\n                openCreateUpdateDialog={openCreateUpdateDialog}\r\n                openDeleteDialog={openDeleteDialog}\r\n                usersAreLoading={usersAreLoading}\r\n                searchAction={onChangeSearchText}\r\n                sortKey={sortKey}\r\n                handleSortKeyChange={handleSortKeyChange}\r\n            />\r\n\r\n            <EditDialog\r\n                createUpdateUser={createUpdateUser}\r\n                isOpen={editDialogIsOpen}\r\n                user={selectedUser}\r\n                openCreateUpdateDialog={openCreateUpdateDialog}\r\n            />\r\n\r\n            <DeleteDialog\r\n                isOpen={deleteDialogIsOpen}\r\n                setIsOpen={openDeleteDialog}\r\n                deleteAction={onDeleteUser}\r\n                itemToDelete={selectedUser}\r\n            />\r\n        </>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        users: getUsers(state),\r\n        usersAreLoading: getUsersAreLoading(state),\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n    loadUsers,\r\n    fakeEditUser,\r\n    fakeDeleteUser,\r\n    fakeAddUser,\r\n})(UsersContainer)\r\n","C:\\OSPanel\\domains\\users-list\\src\\components\\NotFound\\NotFound.tsx",[],"C:\\OSPanel\\domains\\users-list\\src\\components\\NotFound\\notFoundStyles.ts",[],"C:\\OSPanel\\domains\\users-list\\src\\components\\Preloader\\Preloader.tsx",[],"C:\\OSPanel\\domains\\users-list\\src\\components\\Preloader\\preloaderStyles.ts",[],"C:\\OSPanel\\domains\\users-list\\src\\theme.js",[],["285","286"],"C:\\OSPanel\\domains\\users-list\\src\\components\\Navigation\\Navigation.tsx",["287"],"import React, {FC} from 'react';\nimport {makeStyles, createStyles, Theme} from '@material-ui/core/styles';\nimport {Typography, Link} from '@material-ui/core';\nimport {NavLink} from \"react-router-dom\";\nimport MobileNavigation from \"./MobileNavigation\";\nimport {NavLinkType} from \"../Layout/Header\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            display: 'flex',\n            justifyContent: 'flex-end',\n            padding: `${theme.spacing(3)}px 0`,\n            '& > * + *': {\n                marginLeft: theme.spacing(4.5),\n            },\n        },\n        link: {\n            textDecoration: 'none',\n            fontWeight: 700\n        },\n        activeLink: {\n            textDecoration: 'underline',\n            pointerEvents: 'none'\n        }\n    }),\n);\n\ntype NavigationType = {\n    navLinks: NavLinkType[]\n}\n\nconst Navigation:FC<NavigationType> = ({navLinks}) => {\n    const classes = useStyles();\n\n    return (\n        <Typography className={classes.root}>\n            {navLinks.map((link:NavLinkType) => (\n                <Link\n                    component={NavLink}\n                    to={link.path}\n                    key={link.title}\n                    color=\"inherit\"\n                    variant=\"body2\"\n                    activeClassName={classes.activeLink}\n                    className={classes.link}\n                >\n                    {link.title}\n                </Link>\n            ))}\n\n            <MobileNavigation navLinks={NAV_LINKS}/>\n        </Typography>\n    );\n};\n\nexport default Navigation;\n","C:\\OSPanel\\domains\\users-list\\src\\components\\PageTitle\\PageTitle.tsx",[],"C:\\OSPanel\\domains\\users-list\\src\\redux\\store.ts",[],"C:\\OSPanel\\domains\\users-list\\src\\redux\\reducers\\users-reducer.ts",[],"C:\\OSPanel\\domains\\users-list\\src\\api\\api.ts",[],"C:\\OSPanel\\domains\\users-list\\src\\redux\\reducers\\user-selectors.ts",[],"C:\\OSPanel\\domains\\users-list\\src\\components\\Dialogs\\DeleteDialog.tsx",[],"C:\\OSPanel\\domains\\users-list\\src\\components\\Dialogs\\EditDialog.tsx",[],"C:\\OSPanel\\domains\\users-list\\src\\components\\Dialogs\\styles.ts",[],"C:\\OSPanel\\domains\\users-list\\src\\components\\Users\\Users\\Users.tsx",[],"C:\\OSPanel\\domains\\users-list\\src\\components\\Users\\Users\\UsersTable.tsx",[],"C:\\OSPanel\\domains\\users-list\\src\\components\\Users\\Users\\UsersTopPanel.tsx",[],"C:\\OSPanel\\domains\\users-list\\src\\components\\Search\\Search.tsx",[],"C:\\OSPanel\\domains\\users-list\\src\\components\\Navigation\\MobileNavigation.tsx",[],"C:\\OSPanel\\domains\\users-list\\src\\components\\Suspense\\Suspense.tsx",[],"C:\\OSPanel\\domains\\user-contacts-test\\src\\index.tsx",[],["288","289"],"C:\\OSPanel\\domains\\user-contacts-test\\src\\theme.js",[],"C:\\OSPanel\\domains\\user-contacts-test\\src\\reportWebVitals.ts",[],"C:\\OSPanel\\domains\\user-contacts-test\\src\\redux\\store.ts",[],"C:\\OSPanel\\domains\\user-contacts-test\\src\\App.tsx",[],"C:\\OSPanel\\domains\\user-contacts-test\\src\\redux\\reducers\\users-reducer.ts",[],"C:\\OSPanel\\domains\\user-contacts-test\\src\\RouterManager.ts",[],"C:\\OSPanel\\domains\\user-contacts-test\\src\\components\\Suspense\\Suspense.tsx",[],"C:\\OSPanel\\domains\\user-contacts-test\\src\\components\\Layout\\index.ts",[],"C:\\OSPanel\\domains\\user-contacts-test\\src\\components\\NotFound\\NotFound.tsx",[],"C:\\OSPanel\\domains\\user-contacts-test\\src\\components\\Layout\\Main.tsx",[],"C:\\OSPanel\\domains\\user-contacts-test\\src\\components\\NotFound\\notFoundStyles.ts",[],"C:\\OSPanel\\domains\\user-contacts-test\\src\\components\\Layout\\Header.tsx",["290","291","292"],"import React, {FC} from 'react';\nimport {\n    AppBar,\n    Hidden,\n    Toolbar,\n    InputBase,\n    Link,\n    Container, WithStyles,\n} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Navigation from \"../Navigation/Navigation\";\nimport RM from \"../../RouterManager\";\nimport MobileNavigation from \"../Navigation/MobileNavigation\";\nimport {Theme, createStyles} from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\nimport logoImg from '../../assets/images/logo.png';\nimport {NavLinkType} from \"../../types/app\";\nimport cn from 'classnames';\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faUser, faSortDown, faUsers, faComments, faWrench, faPowerOff} from \"@fortawesome/free-solid-svg-icons\";\nimport withHeaderStyles from \"./headerStyles\";\n\ninterface IHeaderType extends WithStyles {\n    navLinks: NavLinkType[]\n}\n\nconst Header: FC<IHeaderType> = ({navLinks, classes}) => {\n    return (\n        <AppBar position=\"static\" className={classes.root}>\n            <Container maxWidth='lg'>\n                <Hidden xsDown>\n                    <Toolbar disableGutters={true}>\n                        <div className={classes.logo}>\n                            <Link href={RM.home.path}>\n                                <img src={logoImg} alt=\"\"/>\n                            </Link>\n                        </div>\n                        <div className={classes.centerWrap}>\n                            <Navigation navLinks={navLinks}/>\n                            <div className={classes.search}>\n                                <InputBase\n                                    placeholder=\"Search\"\n                                    classes={{\n                                        root: classes.inputRoot,\n                                        input: classes.inputInput,\n                                    }}\n                                    inputProps={{'aria-label': 'search'}}\n                                />\n                                <div className={classes.searchIcon}>\n                                    <SearchIcon/>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className={classes.userMenu}>\n                            <div\n                                color=\"inherit\"\n                                className={classes.userMenuBtn}\n                            >\n                                <FontAwesomeIcon icon={faUser} className={classes.icon}/>\n\n                                Jorah Marmount\n                                <FontAwesomeIcon icon={faSortDown} className={cn(classes.icon, classes.sortIcon)}/>\n\n                                <div className={cn(classes.userMenuDropdown, 'dropdown')}>\n                                    <div className={classes.userMenuDropdownContent}>\n                                        <Link href='/'>\n                                            <FontAwesomeIcon icon={faUsers} className={classes.icon}/>\n                                            Groups\n                                        </Link>\n                                        <Link href='/'>\n                                            <FontAwesomeIcon icon={faComments} className={classes.icon}/>\n                                            Frequently contacted</Link>\n                                        <Link href='/'>\n                                            <FontAwesomeIcon icon={faWrench} className={classes.icon}/>\n                                            Preferences\n                                        </Link>\n                                        <Link href='/'>\n                                            <FontAwesomeIcon icon={faPowerOff} className={classes.icon}/>\n                                            Log out\n                                        </Link>\n                                    </div>\n                                </div>\n                            </div>\n\n                        </div>\n                    </Toolbar>\n                </Hidden>\n                <Hidden smUp>\n                    <MobileNavigation navLinks={navLinks}/>\n                </Hidden>\n            </Container>\n        </AppBar>\n    );\n};\n\nexport default withHeaderStyles(Header);\n","C:\\OSPanel\\domains\\user-contacts-test\\src\\components\\PageTitle\\PageTitle.tsx",[],"C:\\OSPanel\\domains\\user-contacts-test\\src\\api\\api.ts",[],"C:\\OSPanel\\domains\\user-contacts-test\\src\\components\\Preloader\\Preloader.tsx",[],"C:\\OSPanel\\domains\\user-contacts-test\\src\\components\\Users\\UsersContainer.tsx",["293","294","295"],"import React, {ChangeEvent, FC, useEffect, useState} from \"react\";\r\nimport Users from \"./Users/Users\";\r\nimport {connect} from 'react-redux'\r\nimport {AppStateType} from \"../../redux/store\";\r\nimport {fakeAddUser, fakeDeleteUser, fakeEditUser, loadUsers} from \"../../redux/reducers/users-reducer\";\r\nimport {FormDataType, SortingTypes, SortOrder, UserType} from \"../../types/users\";\r\nimport {getUsers, getUsersAreLoading} from \"../../redux/reducers/user-selectors\";\r\nimport EditDialog from \"../Dialogs/EditDialog\";\r\nimport DeleteDialog from \"../Dialogs/DeleteDialog\";\r\nimport {v4 as uuidv4} from 'uuid';\r\n\r\ntype MapStatePropsType = {\r\n    usersAreLoading: boolean\r\n    users: UserType[]\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    loadUsers: () => void\r\n    fakeDeleteUser: (id: string | number) => void\r\n    fakeAddUser: (user: UserType) => void\r\n    fakeEditUser: (user: UserType) => void\r\n}\r\n\r\ntype PropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\ntype CitiesType = {\r\n    [key: string]: string\r\n}\r\n\r\n\r\nconst UsersContainer: FC<PropsType> = ({users, usersAreLoading, loadUsers, fakeAddUser, fakeDeleteUser, fakeEditUser}) => {\r\n    const [searchText, setSearchText] = useState('');\r\n    const [editDialogIsOpen, setEditDialogIsOpen] = useState(false);\r\n    const [deleteDialogIsOpen, setDeleteDialogIsOpen] = useState(false);\r\n    const [selectedUser, setSelectedUser] = useState<null | UserType>(null);\r\n    const [selectedCity, setSelectedCity] = useState<string>('all');\r\n    const [cities, setCities] = useState<string[]>([]);\r\n    const [filteredUsers, setFilteredUsers] = useState<UserType[]>(users);\r\n    const [sortKey, setSortKey] = useState<SortingTypes>();\r\n    const [sortOrder, setSortOrder] = useState<SortOrder>('asc');\r\n    const [showOnlyActive, setShowOnlyActive] = useState<boolean>(false);\r\n\r\n    useEffect(() => {\r\n        loadUsers()\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        filterUsers()\r\n    }, [users, searchText, sortKey, selectedCity, sortOrder, showOnlyActive]);\r\n\r\n    useEffect(() => {\r\n        const cities: CitiesType = {};\r\n        users.forEach((user: UserType) => {\r\n            if (!cities[user.city]) {\r\n                cities[user.city] = ''\r\n            }\r\n        });\r\n        setCities(Object.keys(cities));\r\n    }, [users]);\r\n\r\n    const filterUsers = () => {\r\n        const searchTextVal = searchText.trim().toLowerCase();\r\n        let matches = [...users];\r\n\r\n        //search matches\r\n        if(searchTextVal.length > 0) {\r\n            matches = users.filter(({name, surname}) => {\r\n                return name.trim().toLowerCase().includes(searchTextVal) ||\r\n                    surname.trim().toLowerCase().includes(searchTextVal);\r\n            });\r\n        }\r\n\r\n        //sort by city\r\n        if (selectedCity !== 'all') {\r\n            matches = matches.filter(({city}) => city === selectedCity)\r\n        }\r\n\r\n        if(showOnlyActive) {\r\n            matches = matches.filter(({active}) => active === true)\r\n        }\r\n\r\n        //order by sortKey\r\n        if (sortKey) {\r\n            const sortedUsers = matches.sort((a, b) => (a[sortKey] > b[sortKey]) ? 1 : ((b[sortKey] > a[sortKey]) ? -1 : 0));\r\n            sortOrder === 'asc' ? setFilteredUsers(sortedUsers) : setFilteredUsers(sortedUsers.reverse());\r\n        } else {\r\n            setFilteredUsers(matches)\r\n        }\r\n    };\r\n\r\n\r\n    const onDeleteUser = (id: string | number) => {\r\n        console.log('delete user');\r\n        fakeDeleteUser(id);\r\n        setDeleteDialogIsOpen(false)\r\n    };\r\n\r\n    const addUser = (user: FormDataType) => {\r\n        console.log('add user');\r\n        fakeAddUser({...user, id: uuidv4()})\r\n    };\r\n\r\n    const editUser = (user: FormDataType) => {\r\n        console.log('edit user');\r\n        fakeEditUser({...user, id: user.id || uuidv4()})\r\n    };\r\n\r\n    const createUpdateUser = (formData: FormDataType, type: 'add' | 'edit') => {\r\n        switch (type) {\r\n            case 'add':\r\n                addUser(formData);\r\n                break;\r\n            case 'edit':\r\n                editUser(formData);\r\n                break;\r\n            default:\r\n                return false\r\n        }\r\n    };\r\n\r\n    const openCreateUpdateDialog = (value: boolean, user: UserType | null) => {\r\n        setSelectedUser(user);\r\n        setEditDialogIsOpen(value);\r\n    };\r\n\r\n    const openDeleteDialog = (value: boolean, user: UserType | null) => {\r\n        setSelectedUser(user);\r\n        setDeleteDialogIsOpen(value);\r\n    };\r\n\r\n\r\n    const onChangeSearchText = (searchText: string) => {\r\n        setSearchText(searchText)\r\n    };\r\n\r\n    const handleSortKeyChange = (type: SortingTypes) => {\r\n        if (sortKey === type) {\r\n            setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc');\r\n        } else {\r\n            setSortKey(type);\r\n            setSortOrder('asc');\r\n        }\r\n    };\r\n\r\n    const handleCityChange = (event: any) => {\r\n        setSelectedCity(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Users\r\n                users={filteredUsers}\r\n                openCreateUpdateDialog={openCreateUpdateDialog}\r\n                openDeleteDialog={openDeleteDialog}\r\n                usersAreLoading={usersAreLoading}\r\n                searchAction={onChangeSearchText}\r\n                sortKey={sortKey}\r\n                sortOrder={sortOrder}\r\n                handleSortKeyChange={handleSortKeyChange}\r\n                cities={cities}\r\n                selectedCity={selectedCity}\r\n                setSelectedCity={handleCityChange}\r\n                setShowOnlyActive={setShowOnlyActive}\r\n                showOnlyActive={showOnlyActive}\r\n                filterUsers={filterUsers}\r\n            />\r\n\r\n            <EditDialog\r\n                createUpdateUser={createUpdateUser}\r\n                isOpen={editDialogIsOpen}\r\n                user={selectedUser}\r\n                openCreateUpdateDialog={openCreateUpdateDialog}\r\n            />\r\n\r\n            <DeleteDialog\r\n                isOpen={deleteDialogIsOpen}\r\n                setIsOpen={openDeleteDialog}\r\n                deleteAction={onDeleteUser}\r\n                itemToDelete={selectedUser}\r\n            />\r\n        </>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        users: getUsers(state),\r\n        usersAreLoading: getUsersAreLoading(state),\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n    loadUsers,\r\n    fakeEditUser,\r\n    fakeDeleteUser,\r\n    fakeAddUser,\r\n})(UsersContainer)\r\n","C:\\OSPanel\\domains\\user-contacts-test\\src\\components\\Navigation\\MobileNavigation.tsx",[],"C:\\OSPanel\\domains\\user-contacts-test\\src\\components\\Navigation\\Navigation.tsx",[],"C:\\OSPanel\\domains\\user-contacts-test\\src\\components\\Preloader\\preloaderStyles.ts",[],"C:\\OSPanel\\domains\\user-contacts-test\\src\\redux\\reducers\\user-selectors.ts",[],"C:\\OSPanel\\domains\\user-contacts-test\\src\\components\\Dialogs\\DeleteDialog.tsx",[],"C:\\OSPanel\\domains\\user-contacts-test\\src\\components\\Dialogs\\EditDialog.tsx",[],"C:\\OSPanel\\domains\\user-contacts-test\\src\\components\\Users\\Users\\Users.tsx",["296","297"],"import React, {FC, useEffect} from \"react\";\r\nimport {Box, Container} from \"@material-ui/core\";\r\nimport {SortingTypes, SortOrder, UserType} from \"../../../types/users\";\r\nimport UsersTable from \"./UsersTable\";\r\nimport UsersTopPanel from \"./UsersTopPanel\";\r\n\r\ntype UsersType = {\r\n    users: UserType[];\r\n    openCreateUpdateDialog: (value: boolean, user: UserType | null) => void;\r\n    openDeleteDialog: (value: boolean, user: UserType | null) => void;\r\n    usersAreLoading: boolean;\r\n    searchAction: (searchText: string) => void;\r\n    sortKey?: SortingTypes;\r\n    handleSortKeyChange: (event: any) => void;\r\n    selectedCity?: string;\r\n    cities: string[];\r\n    setSelectedCity: (event: any) => void;\r\n    sortOrder: SortOrder;\r\n    showOnlyActive: boolean;\r\n    setShowOnlyActive: (active: boolean) => void;\r\n    filterUsers: () => void\r\n}\r\n\r\nconst Users: FC<UsersType> = ({\r\n      users,\r\n      openCreateUpdateDialog,\r\n      openDeleteDialog,\r\n      usersAreLoading,\r\n      searchAction,\r\n      sortKey,\r\n      handleSortKeyChange,\r\n      selectedCity,\r\n      cities,\r\n      setSelectedCity,\r\n      sortOrder,\r\n      showOnlyActive,\r\n      setShowOnlyActive,\r\n      filterUsers\r\n  }) => {\r\n\r\n    return (\r\n        <Box>\r\n            <UsersTopPanel\r\n                searchAction={searchAction}\r\n                openCreateUpdateDialog={openCreateUpdateDialog}\r\n                selectedCity={selectedCity}\r\n                cities={cities}\r\n                setSelectedCity={setSelectedCity}\r\n                showOnlyActive={showOnlyActive}\r\n                setShowOnlyActive={setShowOnlyActive}\r\n                filterUsers={filterUsers}\r\n            />\r\n            <UsersTable\r\n                users={users}\r\n                openCreateUpdateDialog={openCreateUpdateDialog}\r\n                openDeleteDialog={openDeleteDialog}\r\n                usersAreLoading={usersAreLoading}\r\n                sortKey={sortKey}\r\n                sortOrder={sortOrder}\r\n                handleSortKeyChange={handleSortKeyChange}\r\n            />\r\n\r\n        </Box>\r\n    )\r\n};\r\n\r\nexport default Users;\r\n","C:\\OSPanel\\domains\\user-contacts-test\\src\\components\\Dialogs\\styles.ts",[],"C:\\OSPanel\\domains\\user-contacts-test\\src\\components\\Users\\Users\\UsersTopPanel.tsx",[],"C:\\OSPanel\\domains\\user-contacts-test\\src\\components\\Users\\Users\\UsersTable.tsx",["298"],"import React, {FC, useEffect, useState} from \"react\";\r\nimport {\r\n    TableContainer,\r\n    Table,\r\n    TableRow,\r\n    TableHead,\r\n    TableBody,\r\n    TableCell,\r\n    Box,\r\n    Container,\r\n    Paper, Link, Avatar, WithStyles,\r\n} from \"@material-ui/core\";\r\nimport cn from \"classnames\";\r\nimport {SortingTypes, SortOrder, UserType} from \"../../../types/users\";\r\nimport Preloader from \"../../Preloader/Preloader\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faEye, faEyeSlash, faPencilAlt, faTrashAlt, faArrowDown, faArrowUp} from '@fortawesome/free-solid-svg-icons'\r\nimport withTableStyles from \"./usersTableStyles\";\r\nimport userImg from \"../../../assets/images/user-image.jpg\";\r\n\r\ninterface IUsersTable extends WithStyles {\r\n    users: UserType[];\r\n    openCreateUpdateDialog: (value: boolean, user: UserType | null) => void;\r\n    openDeleteDialog: (value: boolean, user: UserType | null) => void;\r\n    usersAreLoading: boolean;\r\n    sortKey?: SortingTypes;\r\n    handleSortKeyChange: (event: any) => void;\r\n    sortOrder: SortOrder;\r\n}\r\n\r\nconst COLUMNS = [\r\n    {\r\n        name: 'Name',\r\n        sortKey: SortingTypes.BY_NAME,\r\n    }, {\r\n        name: 'Surname',\r\n        sortKey: SortingTypes.BY_SURNAME,\r\n    }, {\r\n        name: 'City',\r\n        sortKey: SortingTypes.BY_CITY,\r\n    }, {\r\n        name: 'Email',\r\n        sortKey: SortingTypes.BY_EMAIL,\r\n    }, {\r\n        name: 'Phone',\r\n        sortKey: SortingTypes.BY_PHONE,\r\n    },\r\n];\r\n\r\nconst UsersTable: FC<IUsersTable> = ({users, openCreateUpdateDialog, openDeleteDialog, usersAreLoading, sortKey, sortOrder, handleSortKeyChange, classes}) => {\r\n    const [userToShow, setUserToShow] = useState<null | UserType>(null);\r\n    useEffect(() => {\r\n        if (!userToShow && users)\r\n            setUserToShow(users[0])\r\n    }, [users]);\r\n\r\n    const onEdit = (user: UserType) => {\r\n        openCreateUpdateDialog(true, user);\r\n    };\r\n\r\n    const onDelete = (user: UserType) => {\r\n        openDeleteDialog(true, user);\r\n    };\r\n\r\n    return (\r\n        <Box className={classes.wrap}>\r\n            <Container maxWidth='lg'>\r\n                <Preloader showPreloader={usersAreLoading}/>\r\n                <div className={classes.grid}>\r\n                    <div className={classes.gridLeft}>\r\n                        {userToShow &&\r\n                        <Paper className={classes.userInfo}>\r\n                          <Box className={classes.userImg}>\r\n                            <Avatar alt={userToShow.name} src={userToShow.id === 3 ? userImg : undefined}\r\n                                    className={classes.avatar}/>\r\n                          </Box>\r\n                          <Box className={classes.userInfoItem}>\r\n                            <Box className={classes.userInfoLabel}>Name:</Box>\r\n                            <Box>{userToShow.name}</Box>\r\n                          </Box>\r\n                          <Box className={classes.userInfoItem}>\r\n                            <Box className={classes.userInfoLabel}>Surname:</Box>\r\n                            <Box>{userToShow.surname}</Box>\r\n                          </Box>\r\n                          <Box className={classes.userInfoItem}>\r\n                            <Box className={classes.userInfoLabel}>City:</Box>\r\n                            <Box>{userToShow.city}</Box>\r\n                          </Box>\r\n                          <Box className={classes.userInfoItem}>\r\n                            <Box className={classes.userInfoLabel}>Email:</Box>\r\n                            <Link href={`mailto:${userToShow.email}`}>{userToShow.email}</Link>\r\n                          </Box>\r\n                          <Box className={classes.userInfoItem}>\r\n                            <Box className={classes.userInfoLabel}>Phone:</Box>\r\n                            <Link href={`tel:${userToShow.phone}`}>{userToShow.phone}</Link>\r\n                          </Box>\r\n                        </Paper>\r\n                        }\r\n                    </div>\r\n                    <div className={classes.gridRight}>\r\n                        <Paper className={classes.paper}>\r\n                            <TableContainer component='div'>\r\n                                <Table className={classes.table} aria-label=\"caption table\">\r\n                                    <TableHead className={classes.tableHead}>\r\n                                        <TableRow>\r\n                                            {COLUMNS.map(col => <TableCell\r\n                                                key={col.name}\r\n                                                align={col.name === 'Phone' ? \"right\" : \"left\"}\r\n                                                onClick={() => handleSortKeyChange(col.sortKey)}\r\n                                                className={cn(classes.headCell)}>\r\n                                                {col.name}\r\n                                                {sortKey === col.sortKey &&\r\n                                                <FontAwesomeIcon icon={sortOrder === 'asc' ? faArrowDown : faArrowUp}\r\n                                                                 className={classes.arrowIcon}/>\r\n                                                }\r\n\r\n                                            </TableCell>)}\r\n                                            <TableCell align=\"right\" className={classes.headCell}/>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {users.map((user) => {\r\n                                            const {id, name, email, phone, city, surname, active} = user;\r\n                                            return (\r\n                                                <TableRow key={id} onClick={() => setUserToShow(user)}\r\n                                                          className={userToShow?.id === id ? cn([classes.activeRow, classes.tableRow]) : classes.tableRow}>\r\n                                                    <TableCell className={classes.tableCell} >\r\n                                                        <FontAwesomeIcon icon={active ? faEye : faEyeSlash}\r\n                                                                         className={classes.eyeIcon} size='sm'/>\r\n                                                        {name}\r\n                                                    </TableCell>\r\n                                                    <TableCell className={classes.tableCell}\r\n                                                               align=\"left\">{surname}</TableCell>\r\n                                                    <TableCell className={classes.tableCell}\r\n                                                               align=\"left\">{city}</TableCell>\r\n                                                    <TableCell className={classes.tableCell}\r\n                                                               align=\"left\">{email}</TableCell>\r\n                                                    <TableCell className={classes.tableCell}\r\n                                                               align=\"left\">{phone}</TableCell>\r\n                                                    <TableCell className={classes.tableCell} align=\"right\">\r\n                                                        <Box component=\"span\" className={classes.actionsIcon}\r\n                                                             onClick={() => onEdit(user)}>\r\n                                                            <FontAwesomeIcon icon={faPencilAlt} size='sm'/>\r\n                                                        </Box>\r\n                                                        <Box component=\"span\" className={classes.actionsIcon}\r\n                                                             onClick={() => onDelete(user)}>\r\n                                                            <FontAwesomeIcon icon={faTrashAlt} size='sm'/>\r\n                                                        </Box>\r\n                                                    </TableCell>\r\n                                                </TableRow>\r\n                                            )\r\n                                        })}\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </TableContainer>\r\n                        </Paper>\r\n                    </div>\r\n                </div>\r\n            </Container>\r\n        </Box>\r\n    )\r\n};\r\n\r\nexport default withTableStyles(UsersTable);\r\n","C:\\OSPanel\\domains\\user-contacts-test\\src\\components\\Search\\Search.tsx",["299"],"import React, {FC, useState} from \"react\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    iconButton: {\r\n        padding: 4,\r\n        color: theme.palette.primary.main\r\n    },\r\n\r\n    search: {\r\n        position: 'relative',\r\n        backgroundColor: '#4a6368',\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        padding: 1,\r\n        width: '100%',\r\n        borderRadius: '19px',\r\n        maxWidth: '100%',\r\n    },\r\n\r\n    input: {\r\n        color: 'inherit',\r\n        borderRadius: '19px',\r\n        border: '1px solid #213b3c',\r\n        backgroundColor: theme.palette.common.white,\r\n        fontSize: \"14px\",\r\n        height: \"36px\",\r\n        width: '100%',\r\n        '& input': {\r\n            padding: '8px 34px 8px 13px',\r\n            transition: theme.transitions.create('width'),\r\n            width: '100%',\r\n            '&::placeholder': {\r\n                opacity: 1\r\n            }\r\n        }\r\n    },\r\n\r\n}));\r\n\r\ntype SearchType = {\r\n    searchAction: (searchText: string) => void,\r\n    placeholder: string,\r\n    liveSearch: boolean\r\n}\r\n\r\nconst Search: FC<SearchType> = ({searchAction, placeholder, liveSearch}) => {\r\n    const classes = useStyles();\r\n    const [searchValue, setSearchValue] = useState('');\r\n    const [typingTimeout, setTypingTimeout] = useState<any>(null);\r\n\r\n    const handleLiveChange = ({target: {value}}: any) => {\r\n        if (typingTimeout) {\r\n            clearTimeout(typingTimeout);\r\n        }\r\n\r\n        setSearchValue(value);\r\n\r\n        setTypingTimeout(setTimeout(() => {\r\n            searchAction(value);\r\n        }, 200));\r\n\r\n    };\r\n\r\n    const handleChange = ({target: {value}}: any) => {\r\n        setSearchValue(value);\r\n        searchAction(value);\r\n    };\r\n\r\n    const handleSubmit = (e: any) => {\r\n        if (!searchValue) {\r\n            return false\r\n        }\r\n        e.preventDefault();\r\n        searchAction(searchValue);\r\n    };\r\n\r\n    const onChangeAction = liveSearch ? handleLiveChange : handleChange;\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div className={classes.search}>\r\n                <InputBase\r\n                    onChange={onChangeAction}\r\n                    className={classes.input}\r\n                    placeholder={placeholder}\r\n                    value={searchValue}\r\n                />\r\n                {liveSearch &&\r\n                <IconButton type=\"submit\" className={classes.iconButton} aria-label=\"search\"\r\n                            disabled={!searchValue}>\r\n                  <SearchIcon/>\r\n                </IconButton>\r\n                }\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nexport default Search;\r\n","C:\\OSPanel\\domains\\user-contacts-test\\src\\components\\Notifications\\Notifications.tsx",[],"C:\\OSPanel\\domains\\user-contacts-test\\src\\components\\Dashboard\\Dashboard.tsx",[],"C:\\OSPanel\\domains\\user-contacts-test\\src\\types\\users.ts",[],"C:\\OSPanel\\domains\\user-contacts-test\\src\\components\\Layout\\Footer.tsx",[],"C:\\OSPanel\\domains\\user-contacts-test\\src\\components\\Layout\\headerStyles.ts",[],"C:\\OSPanel\\domains\\user-contacts-test\\src\\components\\Users\\Users\\usersTableStyles.ts",[],{"ruleId":"300","replacedBy":"301"},{"ruleId":"302","replacedBy":"303"},{"ruleId":"304","severity":1,"message":"305","line":43,"column":1,"nodeType":"306","endLine":57,"endColumn":2},{"ruleId":"307","severity":1,"message":"308","line":11,"column":9,"nodeType":"309","messageId":"310","endLine":11,"endColumn":17},{"ruleId":"307","severity":1,"message":"311","line":11,"column":19,"nodeType":"309","messageId":"310","endLine":11,"endColumn":25},{"ruleId":"312","severity":1,"message":"313","line":45,"column":8,"nodeType":"314","endLine":45,"endColumn":10,"suggestions":"315"},{"ruleId":"312","severity":1,"message":"316","line":49,"column":8,"nodeType":"314","endLine":49,"endColumn":36,"suggestions":"317"},{"ruleId":"300","replacedBy":"301"},{"ruleId":"302","replacedBy":"303"},{"ruleId":"307","severity":1,"message":"318","line":4,"column":8,"nodeType":"309","messageId":"310","endLine":4,"endColumn":10},{"ruleId":"300","replacedBy":"319"},{"ruleId":"302","replacedBy":"320"},{"ruleId":"307","severity":1,"message":"321","line":10,"column":9,"nodeType":"309","messageId":"310","endLine":10,"endColumn":19},{"ruleId":"307","severity":1,"message":"322","line":14,"column":9,"nodeType":"309","messageId":"310","endLine":14,"endColumn":14},{"ruleId":"307","severity":1,"message":"323","line":14,"column":16,"nodeType":"309","messageId":"310","endLine":14,"endColumn":28},{"ruleId":"307","severity":1,"message":"324","line":1,"column":16,"nodeType":"309","messageId":"310","endLine":1,"endColumn":27},{"ruleId":"312","severity":1,"message":"313","line":45,"column":8,"nodeType":"314","endLine":45,"endColumn":10,"suggestions":"325"},{"ruleId":"312","severity":1,"message":"316","line":49,"column":8,"nodeType":"314","endLine":49,"endColumn":77,"suggestions":"326"},{"ruleId":"307","severity":1,"message":"327","line":1,"column":20,"nodeType":"309","messageId":"310","endLine":1,"endColumn":29},{"ruleId":"307","severity":1,"message":"328","line":2,"column":14,"nodeType":"309","messageId":"310","endLine":2,"endColumn":23},{"ruleId":"312","severity":1,"message":"329","line":55,"column":8,"nodeType":"314","endLine":55,"endColumn":15,"suggestions":"330"},{"ruleId":"307","severity":1,"message":"331","line":3,"column":8,"nodeType":"309","messageId":"310","endLine":3,"endColumn":13},"no-native-reassign",["332"],"no-negated-in-lhs",["333"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","@typescript-eslint/no-unused-vars","'MenuItem' is defined but never used.","Identifier","unusedVar","'Select' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadUsers'. Either include it or remove the dependency array. If 'loadUsers' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["334"],"React Hook useEffect has a missing dependency: 'filterUsers'. Either include it or remove the dependency array.",["335"],"'RM' is defined but never used.",["332"],["333"],"'makeStyles' is defined but never used.","'Theme' is defined but never used.","'createStyles' is defined but never used.","'ChangeEvent' is defined but never used.",["336"],["337"],"'useEffect' is defined but never used.","'Container' is defined but never used.","React Hook useEffect has a missing dependency: 'userToShow'. Either include it or remove the dependency array.",["338"],"'Paper' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"339","fix":"340"},{"desc":"341","fix":"342"},{"desc":"339","fix":"343"},{"desc":"344","fix":"345"},{"desc":"346","fix":"347"},"Update the dependencies array to be: [loadUsers]",{"range":"348","text":"349"},"Update the dependencies array to be: [users, searchText, sortKey, filterUsers]",{"range":"350","text":"351"},{"range":"352","text":"349"},"Update the dependencies array to be: [users, searchText, sortKey, selectedCity, sortOrder, showOnlyActive, filterUsers]",{"range":"353","text":"354"},"Update the dependencies array to be: [userToShow, users]",{"range":"355","text":"356"},[1696,1698],"[loadUsers]",[1759,1787],"[users, searchText, sortKey, filterUsers]",[1867,1869],[1928,1997],"[users, searchText, sortKey, selectedCity, sortOrder, showOnlyActive, filterUsers]",[1807,1814],"[userToShow, users]"]